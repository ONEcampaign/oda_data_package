[project]
name = "oda_data"
version = "2.3.0"
description = "A python package to work with Official Development Assistance data from the OECD DAC."
requires-python = ">=3.11"

license = {text = "MIT"}
readme = "README.md"
authors = [
    {name = "Jorge Rivera", email = "jorge.rivera@one.org"},
    {name = "Miguel Haro Ruiz", email = "miguel.haroruiz@one.org"}
]

dependencies = [
    "cachetools>=6.2.0",
    "filelock>=3.20.0",
    "oda-reader>=1.3.0",
    "pandas[excel,parquet,performance]>=2.2.0",
    "pydeflate>=2.1.3",
    "reader>=3.18",
    "thefuzz>=0.22.1",
]

[project.urls]
Homepage = "https://github.com/ONEcampaign/oda_data_package"
Repository = "https://github.com/ONEcampaign/oda_data_package"
Documentation = "https://github.com/ONEcampaign/oda_data_package"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "uv-build>=0.8.22",
    "pre-commit>=4.0.0",
    "ruff>=0.14.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "freezegun>=1.4.0",
]

[tool.ruff]
# Set the maximum line length
line-length = 88

# Target Python 3.11+
target-version = "py311"

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    "htmlcov",
]

[tool.ruff.lint]
# Enable recommended rules plus extras
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "SIM",   # flake8-simplify
    "PL",    # pylint
    "RUF",   # ruff-specific rules
]

# Ignore specific rules that might be too strict
ignore = [
    "E501",    # Line too long (handled by formatter)
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Allow test files to have longer lines and more assertions
"tests/**/*.py" = ["E501", "PLR2004"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Use spaces for indentation
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect line endings
line-ending = "auto"
